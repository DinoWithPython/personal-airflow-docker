version: '3.8'
services:
  # Контейнер с вебсервером airflow
  airflow-webserver:
    container_name: airflow
    image: apache/airflow:2.5.0-python3.9
    ports:
      - "8080:8080" # Веб-порт Airflow
    environment:
      # Указываем тип исполнителя. В данном случае для локального использования.
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      # Подключение в базе данных постгреса
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: your-secret-key-here  # обязательно для безопасности
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    # Подключаем необходимые для работы и отладки локальные папки.
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins  # если используете плагины
    # Зависимость запуска "от".
    depends_on:
      - postgres
      - airflow-init
    # Выполнение команд в консоли. Для начала ждем инициализации постгреса, примерно 10 секунд.
    # Потом инициализируем базу данных аирфлоу. Создаем пользователя и запускаем веб-сервер.
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname $$HOSTNAME"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    command: webserver
    # command: >
    #   bash -c "
    #   sleep 10 &&
    #   airflow db init &&
    #   airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
    #   exec airflow webserver"

  # Контейнер планироващика запускаем отдельно.
  airflow-scheduler:
    container_name: airflow-scheduler
    image: apache/airflow:2.5.0-python3.9
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    depends_on:
      - postgres
      - airflow-init
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname $$HOSTNAME"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    command: scheduler

  # Контейнер с БД.
  postgres:
    container_name: postgres
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      PGDATA: /var/lib/postgresql/data/pgdata  # явный путь к данным
    # Проверяем, что база данных доступна
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow", "-d", "airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  airflow-init:
    image: apache/airflow:2.5.0-python3.9
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    depends_on:
      - postgres
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
        echo 'Initialization complete'
        airflow webserver"
    restart: "no"

volumes:
  postgres_data:
    driver: local
